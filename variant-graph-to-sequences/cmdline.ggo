# Copyright (c) 2019-2022 Tuukka Norri
# This code is licensed under MIT license (see LICENSE for details).

package		"variant-graph-to-sequences"
purpose		"Converts the intermediate graph format to haplotype or founder sequences."
usage		"variant_graph_to_sequences -H|-F --reference=filename.fa --variants=variants.graph [<options>]"
description	"Reads the variant graph file and produces a reference-guided alignment of haplotype or founder sequences. The sequences will be written one sequence per file to the current working directory."

option		"reference"				r	"Reference FASTA file path"																	string	typestr = "filename"					required
option		"variants"				g	"Variant graph file path"																	string	typestr = "filename"					required
option		"reference-sequence"	-	"Reference sequence identifier"																string	typestr = "identifier"					optional
option		"chunk-size"			-	"Number of output files to be opened simultaneously"										long	typestr = "size"		default = "500"	optional
option		"overwrite"				-	"Allow overwriting existing files"															flag	off
option		"omit-reference-output"	-	"Do not output the aligned reference sequence"												flag	off
option		"pipe"					-	"Instead of writing to files, pipe the output to the given command"							string	typestr = "command"						optional

defmode	"Output samples"							modedesc = "Output a reference-guided multiple alignment of the samples."
modeoption	"output-samples"			S	"Output samples"																					mode = "Output samples"								required

defmode	"Output founders with arbitrary matching"	modedesc = "Output a reference-guided multiple alignment of the founder sequences generated from the samples. The segments will be matched arbitrarily."
modeoption	"output-founders"			F	"Output founders"																					mode = "Output founders with arbitrary matching"	required

defmode "Output founders with greedy matching"		modedesc = "Output a reference-guided multiple alignment of the founder sequences generated from the samples. The segments will be matched greedily."
modeoption	"output-founders-greedy"		G	"Output founders with greedy matching"																mode = "Output founders with greedy matching"	required
modeoption	"founder-count"					-	"Number of sequences to be generated excluding the reference"							long		mode = "Output founders with greedy matching"	required
modeoption	"fill-unassigned-with-ref"		-	"Fill unassigned segments with the reference instead of Nâ€™s"							flag	off	mode = "Output founders with greedy matching"
modeoption	"remove-mid-from-duplicates"	-	"Remove middle part from substrings known to be duplicates"								flag	off	mode = "Output founders with greedy matching"
modeoption	"tail-length"					-	"Head and tail length to be kept when removing middle parts"							long		mode = "Output founders with greedy matching"	optional	default = "25"	dependon = "remove-mid-from-duplicates"
